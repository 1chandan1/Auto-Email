name: Create EXE and Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.0
          architecture: x64

      - name: Install Dependencies
        run: |
          pip install pyinstaller
          pip install -r requirements.txt
        working-directory: ./

      - name: Create .env File
        run: echo 'CLIENT_SECRET=${{secrets.CLIENT_SECRET}}' > .env

      - name: Create Version File
        run: python -c "import datetime; print(datetime.datetime.now().strftime('%Y-%m-%dT%H:%M:%SZ'))" > version.txt
        
      - name: Build EXE
        run: |
          pyinstaller --noconfirm --onefile --console --icon "bot.ico" --name "AutoEmail" --clean --add-data "attachment.pdf:." --add-data "version.txt:." --add-data ".env:." --add-data "template.docx:." --add-data "updater.exe:." --distpath ./output "auto_email.py"
        working-directory: ./

      - name: Create Git Tag
        run: |
          git tag v$(date +%Y%m%d%H%M%S)
          git push --tags

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/AutoEmail.exe
          asset_name: AutoEmail.exe
          asset_content_type: application/octet-stream
